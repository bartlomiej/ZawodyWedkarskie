// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZawodyWedkarskie.API.Data;

namespace ZawodyWedkarskie.API.Migrations
{
    [DbContext(typeof(ZawodyWedkarskieContext))]
    [Migration("20200315212009_Aktualkzacja contextu")]
    partial class Aktualkzacjacontextu
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.GrandPrix", b =>
                {
                    b.Property<int>("IdGrandPrix")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGrandPrix");

                    b.ToTable("GrandPrixy");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Kolo", b =>
                {
                    b.Property<int>("IdKola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("IdKola");

                    b.ToTable("Kola");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikGatunekRyby", b =>
                {
                    b.Property<int>("IdGatunku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<DateTime>("OkresOchronnyDo")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("OkresOchronnyOd")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Punkty")
                        .HasColumnType("int");

                    b.Property<int>("PunktyPonadWymiar")
                        .HasColumnType("int");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<int>("WymiarOchronny")
                        .HasColumnType("int");

                    b.HasKey("IdGatunku");

                    b.ToTable("SlownikGatunkiRyb");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikLowisko", b =>
                {
                    b.Property<int>("IdLowiska")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("IdLowiska");

                    b.ToTable("SlownikLowiska");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikNagroda", b =>
                {
                    b.Property<int>("IdNagrody")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("SredniaCena")
                        .HasColumnType("MONEY");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("IdNagrody");

                    b.ToTable("SlownikNagrody");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikRodzajZawodow", b =>
                {
                    b.Property<int>("IdRodzaju")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Dyscyplina")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Rodzaj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("IdRodzaju");

                    b.ToTable("SlownikRodzajeZawodow");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikStanowisko", b =>
                {
                    b.Property<int>("IdGrandPrix")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGrandPrix");

                    b.ToTable("SlownikStanowiska");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Uzytkownik", b =>
                {
                    b.Property<int>("IdUzytkownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<byte[]>("HasloHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HasloSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("NrKartyWedkarskiej")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("IdUzytkownika");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.UzytkownikUprawnienie", b =>
                {
                    b.Property<int>("IdUprawnienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdUzytkownika")
                        .HasColumnType("int");

                    b.Property<string>("Klucz")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<string>("Uprawnienie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("IdUprawnienia");

                    b.HasIndex("IdUzytkownika");

                    b.ToTable("UzytkownikyUprawnienia");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Wedkarz", b =>
                {
                    b.Property<int>("IdWedkarza")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("IdKola")
                        .HasColumnType("int");

                    b.Property<int?>("IdStanowiska")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("ImieDrugie")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("NrKartyWedkarskiej")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<bool>("UprawnieniaSedziego")
                        .HasColumnType("bit");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("IdWedkarza");

                    b.HasIndex("IdKola");

                    b.HasIndex("IdStanowiska");

                    b.ToTable("Wedkarze");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Zawody", b =>
                {
                    b.Property<int>("IdZawodow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataKoncaZapisow")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataRozpoczecia")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataZakonczenia")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataZbiorki")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdGrandPrix")
                        .HasColumnType("int");

                    b.Property<int>("IdKolaOrganizatora")
                        .HasColumnType("int");

                    b.Property<int>("IdLowiska")
                        .HasColumnType("int");

                    b.Property<int>("IdRodzajuZawodow")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Protesty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PunktyZaWymiar")
                        .HasColumnType("int");

                    b.Property<bool>("TylkoDlaCzlonkowKola")
                        .HasColumnType("bit");

                    b.Property<string>("UwagiLowisko")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<bool>("Zakonczone")
                        .HasColumnType("bit");

                    b.HasKey("IdZawodow");

                    b.HasIndex("IdGrandPrix");

                    b.HasIndex("IdKolaOrganizatora");

                    b.HasIndex("IdLowiska");

                    b.HasIndex("IdRodzajuZawodow");

                    b.ToTable("Zawody");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.UzytkownikUprawnienie", b =>
                {
                    b.HasOne("ZawodyWedkarskie.API.Models.Uzytkownik", "Uzytkownik")
                        .WithMany()
                        .HasForeignKey("IdUzytkownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Wedkarz", b =>
                {
                    b.HasOne("ZawodyWedkarskie.API.Models.Kolo", "Kolo")
                        .WithMany()
                        .HasForeignKey("IdKola");

                    b.HasOne("ZawodyWedkarskie.API.Models.SlownikStanowisko", "Stanowisko")
                        .WithMany()
                        .HasForeignKey("IdStanowiska");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Zawody", b =>
                {
                    b.HasOne("ZawodyWedkarskie.API.Models.GrandPrix", "GrandPrix")
                        .WithMany()
                        .HasForeignKey("IdGrandPrix")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZawodyWedkarskie.API.Models.Kolo", "KoloOrganizator")
                        .WithMany()
                        .HasForeignKey("IdKolaOrganizatora")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZawodyWedkarskie.API.Models.SlownikLowisko", "Lowisko")
                        .WithMany()
                        .HasForeignKey("IdLowiska")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZawodyWedkarskie.API.Models.SlownikRodzajZawodow", "RodzajZawodow")
                        .WithMany()
                        .HasForeignKey("IdRodzajuZawodow")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
