// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZawodyWedkarskie.API.Data;

namespace ZawodyWedkarskie.API.Migrations
{
    [DbContext(typeof(ZawodyWedkarskieContext))]
    partial class ZawodyWedkarskieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.GrandPrix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("GrandPrixy");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Kolo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("Kola");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikGatunekRyby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<DateTime>("OkresOchronnyDo")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("OkresOchronnyOd")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Punkty")
                        .HasColumnType("int");

                    b.Property<int>("PunktyPonadWymiar")
                        .HasColumnType("int");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<int>("WymiarOchronny")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SlownikGatunkiRyb");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikLowisko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("SlownikLowiska");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikNagroda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<decimal>("SredniaCena")
                        .HasColumnType("MONEY");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("SlownikNagrody");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikRodzajZawodow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Dyscyplina")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Rodzaj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("SlownikRodzajeZawodow");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.SlownikStanowisko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("SlownikStanowiska");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<byte[]>("HasloHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("HasloSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("NrKartyWedkarskiej")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownicy");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.UzytkownikUprawnienie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Klucz")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(6)");

                    b.Property<string>("Uprawnienie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(1)");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.ToTable("UzytkownikyUprawnienia");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Wedkarz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktywny")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<string>("ImieDrugie")
                        .HasColumnType("NVARCHAR(30)");

                    b.Property<int?>("KoloId")
                        .HasColumnType("int");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("NrKartyWedkarskiej")
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<int?>("StanowiskoId")
                        .HasColumnType("int");

                    b.Property<bool>("UprawnieniaSedziego")
                        .HasColumnType("bit");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.HasIndex("KoloId");

                    b.HasIndex("StanowiskoId");

                    b.ToTable("Wedkarze");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Zawody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataKoncaZapisow")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataRozpoczecia")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataZakonczenia")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataZbiorki")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.HasKey("Id");

                    b.ToTable("Zawody");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Zdjecie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModyfikacji")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataUtworzenia")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("Glowne")
                        .HasColumnType("bit");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("UzytkownikId")
                        .HasColumnType("int");

                    b.Property<string>("UzytkownikModyfikowal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<string>("UzytkownikUtworzyl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(70)");

                    b.Property<int>("WedkarzId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UzytkownikId");

                    b.HasIndex("WedkarzId");

                    b.ToTable("Zdjecia");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.UzytkownikUprawnienie", b =>
                {
                    b.HasOne("ZawodyWedkarskie.API.Models.Uzytkownik", "Uzytkownik")
                        .WithMany("Uprawnienia")
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Wedkarz", b =>
                {
                    b.HasOne("ZawodyWedkarskie.API.Models.Kolo", "Kolo")
                        .WithMany()
                        .HasForeignKey("KoloId");

                    b.HasOne("ZawodyWedkarskie.API.Models.SlownikStanowisko", "Stanowisko")
                        .WithMany()
                        .HasForeignKey("StanowiskoId");
                });

            modelBuilder.Entity("ZawodyWedkarskie.API.Models.Zdjecie", b =>
                {
                    b.HasOne("ZawodyWedkarskie.API.Models.Uzytkownik", "Uzytkownik")
                        .WithMany("Zdjecia")
                        .HasForeignKey("UzytkownikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZawodyWedkarskie.API.Models.Wedkarz", "Wedkarz")
                        .WithMany("Zdjecia")
                        .HasForeignKey("WedkarzId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
